openapi: 3.0.4
info:
  title: API Desafio iPag Pagamentos Digitais
  version: 1.0.0

tags:
  - name: orders
    description: Operações relacionadas a pedidos'

paths:
  /orders:
    get:
      tags: [orders]
      summary: Lista todos s pedidos
      responses:
        '200':
          description: Lista de pedidos
          content:
            application/json:
              schema:
                type: object
                properties:
                  orders:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrderResponse'
    post:
      tags: [orders]
      summary: Cria um novo pedido
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
      responses:
        '201':
          description: Pedido criado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Pedido criado com sucesso
        '404':
          description: Cliente não encontrado
        '409':
          description: Dados inconsistentes do cliente

  /orders/{id}:
    get:
      tags: [orders]
      summary: Consulta um pedido específico
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Pedido encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '404':
          description: Pedido não encontrado

  /orders/{id}/status:
    put:
      tags: [orders]
      summary: Atualiza o status de um pedido
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderStatusUpdate'
      responses:
        '200':
          description: Status atualizado com sucesso
        '400':
          description: Transição de status inválida
        '404':
          description: Pedido não encontrado

  /orders/summary:
    get:
      tags: [orders]
      summary: Retorna estatísticas de pedidos
      responses:
        '200':
          description: Resumo estatístico
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_orders:
                    type: integer
                  total_value:
                    type: number
                    format: float
                  by_status:
                    type: object
                    additionalProperties:
                      type: integer

components:
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        document:
          type: string
        email:
          type: string
        phone:
          type: string

    OrderItem:
      type: object
      properties:
        product_name:
          type: string
        quantity:
          type: integer
        unit_value:
          type: number
          format: float

    OrderRequest:
      type: object
      properties:
        customer:
          $ref: '#/components/schemas/Customer'
        order:
          type: object
          properties:
            total_value:
              type: number
              format: float
            items:
              type: array
              items:
                $ref: '#/components/schemas/OrderItem'

    OrderResponse:
      type: object
      properties:
        order_id:
          type: string
          example: ORD-12345
        status:
          type: string
          enum: [PENDING, WAITING_PAYMENT, PAID, PROCESSING, SHIPPED, DELIVERED, CANCELED]
        total_value:
          type: number
        customer:
          $ref: '#/components/schemas/Customer'
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        created_at:
          type: string
          format: date-time

    OrderStatusUpdate:
      type: object
      properties:
        id:
          type: integer
        status:
          type: string
          enum: [PENDING, WAITING_PAYMENT, PAID, PROCESSING, SHIPPED, DELIVERED, CANCELED]
        notes:
          type: string
